---
interface Props {
  title: string;
  slug: string;
  status?: string;
  type?: string;
  summary?: string;
  updatedAt?: string;
  publishedAt?: string | null;
  author?: string;
}

const {
  title,
  slug,
  status = 'draft',
  type = 'article',
  summary,
  updatedAt,
  publishedAt,
  author,
} = Astro.props as Props;

const displayDate = publishedAt ?? updatedAt;
const formattedDate = displayDate
  ? new Intl.DateTimeFormat(undefined, {
      year: 'numeric',
      month: 'short',
      day: 'numeric',
    }).format(new Date(displayDate))
  : null;
const href = `/blog/${slug}`;
---

const statusClass = (() => {
  const value = status.toLowerCase();
  if (value === 'published') return 'bg-emerald-100 text-emerald-700';
  if (value === 'draft') return 'bg-slate-200 text-slate-700';
  return 'bg-indigo-100 text-indigo-700';
})();

<article class="flex flex-col gap-4 rounded-2xl bg-white p-7 shadow-xl shadow-slate-200">
  <div class="flex flex-wrap items-center gap-3 text-sm text-slate-600">
    <span class={`inline-flex items-center rounded-full px-3 py-1 font-semibold capitalize ${statusClass}`}>
      {status}
    </span>
    <span class="inline-flex items-center rounded-full bg-slate-100 px-3 py-1 font-semibold capitalize text-slate-700">
      {type}
    </span>
    {formattedDate && <span class="text-slate-500">{formattedDate}</span>}
    {author && <span class="font-medium text-slate-800">By {author}</span>}
  </div>
  <h3 class="text-2xl font-semibold text-slate-900">
    <a class="text-slate-900 transition hover:text-indigo-500" href={href}>
      {title}
    </a>
  </h3>
  {summary && <p class="text-slate-600">{summary}</p>}
</article>
